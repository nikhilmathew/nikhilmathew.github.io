{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/firebase.service.ts","webpack:///./src/app/iteration.pipe.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"UploadForm\\\">\\n  <div class=\\\"logo\\\">Upload an item </div>\\n  <div class=\\\"register-item\\\">\\n    <form #myform=\\\"ngForm\\\" (ngSubmit)=\\\"register(myform)\\\" class=\\\"form form-register\\\">\\n\\n      <div class=\\\"form-field\\\">\\n            <label class=\\\"user\\\" for=\\\"category\\\"><span class=\\\"hidden\\\">Category</span></label>\\n            <select name=\\\"category\\\" id=\\\"category\\\" type=\\\"select\\\" class=\\\"form-input\\\" placeholder=\\\"Category\\\" ngModel required>\\n              <option value=\\\"\\\" disabled>Please select a category</option>\\n              <option *ngFor=\\\"let cat of categories\\\"\\n                      [value]=\\\"cat.id\\\"> \\n                      {{cat.category_name}} \\n              </option>\\n            </select>\\n\\n      </div>\\n      <div class=\\\"form-field\\\">\\n        <label class=\\\"number_of_images\\\" for=\\\"type\\\"><span class=\\\"hidden\\\">Number of Images</span></label>\\n        <Input name=\\\"number_of_images\\\" ngDefaultControl type=\\\"number\\\" min=\\\"1\\\" value=\\\"1\\\" [(ngModel)]=\\\"number_of_images\\\">\\n      </div>\\n      <div class=\\\"form-field\\\">\\n        <label class=\\\"user\\\" for=\\\"art-title\\\"><span class=\\\"hidden\\\">Title</span></label>\\n        <input name=\\\"title\\\" id=\\\"art-title\\\" type=\\\"text\\\" class=\\\"form-input\\\" placeholder=\\\"title\\\" ngModel required>\\n      </div>\\n\\n      <!-- <div class=\\\"form-field\\\">\\n        <label class=\\\"lock\\\" for=\\\"description\\\"><span class=\\\"hidden\\\">description</span></label>\\n        <input name=\\\"description\\\" id=\\\"description\\\" type=\\\"text\\\" class=\\\"form-input\\\" placeholder=\\\"description\\\" ngModel required>\\n      </div> -->\\n      <div class=\\\"form-field\\\">\\n        <label class=\\\"lock\\\" for=\\\"order\\\"><span class=\\\"hidden\\\">order</span></label>\\n        <input name=\\\"order\\\" id=\\\"order\\\" type=\\\"number\\\" class=\\\"form-input\\\" placeholder=\\\"order\\\" ngModel required>\\n      </div>\\n      <div class=\\\"form-field\\\">\\n        <label class=\\\"lock\\\" for=\\\"description\\\"><span class=\\\"hidden\\\">global_order</span></label>\\n        <input name=\\\"global_order\\\" id=\\\"global_order\\\" type=\\\"number\\\" class=\\\"form-input\\\" placeholder=\\\"global_order\\\" ngModel required>\\n      </div>\\n      <!-- <div class=\\\"form-field\\\">\\n        <label class=\\\"lock\\\" for=\\\"order\\\"><span class=\\\"hidden\\\">image</span></label>\\n        <input name=\\\"image\\\" id=\\\"image\\\" type=\\\"text\\\" class=\\\"form-input\\\" placeholder=\\\"image\\\" ngModel required>\\n      </div> -->\\n      <div class=\\\"form-field\\\">\\n        <label class=\\\"lock\\\" for=\\\"order\\\"><span class=\\\"hidden\\\">Image / Cover Image</span></label>\\n        <input name=\\\"preview_image\\\" id=\\\"image\\\" type=\\\"file\\\" class=\\\"form-input\\\" placeholder=\\\"image\\\" (change)=\\\"gotCoverImage($event)\\\" required>\\n      </div>\\n      <ng-container  class=\\\"image_bucket\\\" *ngFor=\\\"let count of number_of_images | iteration\\\">\\n        <div class=\\\"form-field\\\">\\n          <label class=\\\"lock\\\" for=\\\"description\\\"><span class=\\\"hidden\\\">description {{ count +1 }}</span></label>\\n          <input name=\\\"{{'description_'+count}}\\\" id=\\\"description\\\" type=\\\"text\\\" class=\\\"form-input\\\" placeholder=\\\"description\\\" ngModel required>\\n        </div>\\n        <div class=\\\"form-field\\\">\\n        <label class=\\\"lock\\\" for=\\\"order\\\"><span class=\\\"hidden\\\">Image {{ count +1 }}</span></label>\\n        <input name=\\\"{{'image_'+count}}\\\" [attr.index]=\\\"count\\\" id=\\\"image\\\" type=\\\"file\\\" class=\\\"form-input\\\" placeholder=\\\"image\\\" (change)=\\\"gotImage($event)\\\" required>\\n      </div>\\n      </ng-container>\\n      \\n      <div class=\\\"status\\\">\\n        <p id=\\\"status\\\">Click the upload button after filling form</p>\\n      </div>\\n      <div class=\\\"form-field\\\">\\n        <input *ngIf=\\\"!mode\\\" type=\\\"submit\\\" value=\\\"Upload to Website\\\">\\n        <input *ngIf=\\\"mode\\\" type=\\\"reset\\\" value=\\\"reset the form for another upload\\\" (click)=\\\"showUpload()\\\">\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n</div>\"","module.exports = \".container {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 100%;\\n  height: 100%; }\\n  .container .UploadForm {\\n    border: 5px solid orange;\\n    border-radius: 15px 0px 15px 0px;\\n    width: 50%;\\n    height: 50%;\\n    display: flex;\\n    align-content: center;\\n    align-items: center;\\n    justify-content: center;\\n    flex-direction: column;\\n    background-color: lightcoral; }\\n  .container .UploadForm .logo {\\n      text-decoration: underline;\\n      font-size: 25px;\\n      padding: 15px; }\\n  .container .UploadForm .register-item {\\n      background-color: orange;\\n      border-radius: 15px 0px 15px 0px;\\n      padding: 10px; }\\n  .container .UploadForm .register-item .form-field {\\n        padding: 5px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9uaWtoaWxtYXRoZXcvQ29kZS9zYXJmYXJhel9iYWNrZW5kL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksYUFBWTtFQUNaLG1CQUFrQjtFQUNsQix1QkFBc0I7RUFDdEIsV0FBVTtFQUNWLFlBQVcsRUFBQTtFQU5mO0lBUVEsd0JBQXVCO0lBQ3ZCLGdDQUFnQztJQUNoQyxVQUFTO0lBQ1QsV0FBVTtJQUNWLGFBQVk7SUFDWixxQkFBcUI7SUFDckIsbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QixzQkFBc0I7SUFDdEIsNEJBQTJCLEVBQUE7RUFqQm5DO01BbUJZLDBCQUEwQjtNQUMxQixlQUFjO01BQ2QsYUFBWSxFQUFBO0VBckJ4QjtNQXdCWSx3QkFBdUI7TUFDdkIsZ0NBQWdDO01BQ2hDLGFBQVksRUFBQTtFQTFCeEI7UUE0QmdCLFlBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXJ7XG4gICAgLy8gYm9yZGVyOjFweCBzb2xpZCByZWQ7XG4gICAgZGlzcGxheTpmbGV4O1xuICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO1xuICAgIHdpZHRoOjEwMCU7XG4gICAgaGVpZ2h0OjEwMCU7XG4gICAgLlVwbG9hZEZvcm17XG4gICAgICAgIGJvcmRlcjo1cHggc29saWQgb3JhbmdlO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAxNXB4IDBweCAxNXB4IDBweDtcbiAgICAgICAgd2lkdGg6NTAlO1xuICAgICAgICBoZWlnaHQ6NTAlO1xuICAgICAgICBkaXNwbGF5OmZsZXg7XG4gICAgICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6bGlnaHRjb3JhbDtcbiAgICAgICAgLmxvZ297XG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZToyNXB4O1xuICAgICAgICAgICAgcGFkZGluZzoxNXB4O1xuICAgICAgICB9XG4gICAgICAgIC5yZWdpc3Rlci1pdGVte1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjpvcmFuZ2U7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxNXB4IDBweCAxNXB4IDBweDtcbiAgICAgICAgICAgIHBhZGRpbmc6MTBweDtcbiAgICAgICAgICAgIC5mb3JtLWZpZWxke1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6NXB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { FirebaseService } from './firebase.service';\nimport { FormControl } from '@angular/forms';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  myform;\n  cover_image=null;\n  images = [];\n  mode=false;\n  number_of_images:number =1;\n  categories = [];\n    constructor(private firebase: FirebaseService) {\n        // this.items = db.collection('/items').valueChanges();\n    }\n    ngOnInit() {\n      // this.firebase.signedInState.subscribe((user) => {\n      //   console.log(user);\n      // });\n      this.firebase.getCategories()\n      .then((categories: []) => {\n        this.categories = categories;\n      });\n    }\n    register(form) {\n      this.mode=true;\n      console.log(form.value);\n      document.getElementById('status').innerText = \"Uploading to Website...\"\n\n      this.firebase.addToWork(form.value, this.cover_image,this.images)\n      .then((result)=>{\n        document.getElementById('status').innerText = \"Upload Successful\"\n        setTimeout(()=>{\n          document.getElementById('status').innerText = \"CLik the uplaod button after filling form\"\n        },2000)\n      })\n      .catch((err)=>{\n        document.getElementById('status').innerText = \"Upload Failed , plese try again\"\n        setTimeout(()=>{\n          document.getElementById('status').innerText = \"CLik the uplaod button after filling form\"\n        },2000)\n      })\n    }\n    showUpload(){\n      this.mode = false;\n    }\n    gotImage(event) {\n      console.warn(event.target, event.target.getAttribute('index'))\n      console.log(event.target.files[0]);\n      this.images[parseInt(event.target.getAttribute('index'))] = event.target.files[0];\n      console.error(this.images)\n    }\n    gotCoverImage(event){\n      this.cover_image = event.target.files[0];\n    }\n  }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireModule } from 'angularfire2';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { environment } from 'src/environments/environment';\nimport { FirebaseService } from './firebase.service';\nimport { FormsModule } from '@angular/forms';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\n\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { CommonModule } from '@angular/common';\nimport { IterationPipe } from './iteration.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    IterationPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    FormsModule,\n    CommonModule,\n    AngularFireStorageModule,\n    AngularFireAuthModule\n  ],\n  providers: [FirebaseService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFireStorage } from '@angular/fire/storage';\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n  signedInState: Subject<any>;\n  constructor(\n    private fireAuth: AngularFireAuth,\n    private firestore: AngularFirestore,\n    private firestorage: AngularFireStorage,\n    ) {\n      this.loginListener();\n     }\n\n  loginListener() {\n    // this.fireAuth.onAuthStateChanged((user) => {\n    //     this.signedInState.next(user);\n    // });\n  }\n  login(email, password) {\n    // this.fireAuth.signInWithEmailAndPassword(email, password)\n    // .then(result => {\n    //   console.log(result);\n    // });\n  }\n\n  uploadImageandGetURL(image) {\n    // this.firestorage.\n  }\n  getCategories() {\n    return new Promise((fulfill, reject) => {\n    const categories = [];\n    this.firestore.collection('/categories').get().subscribe((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n          // doc.data() is never undefined for query doc snapshots\n          console.log(doc.id, ' => ', doc.data());\n          categories.push({\n            id: doc.id,\n            category_name : doc.data().category_name,\n            category_order: doc.data().category_order,\n            count: 0\n          });\n      });\n      fulfill(categories);\n    });\n  });\n  }\n  addToWork(art, cover,images) {\n    return new Promise((fulfill, reject)=>{\n      const data = art;\n      console.log(art);\n      const ref = this.firestore.collection('/categories').doc(art.category).ref;\n      data.category = ref;\n      this.firestore.collection('/works').add(data).then(res => {\n        console.log(res);\n        const storageref = this.firestorage.ref(res.id);\n        storageref.put(cover)\n        .then(snapshot => {\n          console.log(snapshot);\n          snapshot.ref.getDownloadURL().then((downloadURL) => {\n            console.log('File available at', downloadURL);\n            this.firestore.collection('/works').doc(res.id).set({ cover_image : downloadURL}, { merge: true })\n            .then((resp)=>{\n              fulfill()\n            })\n            .catch(err =>{\n              reject(err)\n            })\n          })\n          .catch(err =>{\n            reject(err)\n          })\n        })\n        .catch(err =>{\n          reject(err)\n        })\n        images.forEach((image,index) => {\n          let storageref = this.firestorage.ref(res.id+'_'+index);\n        storageref.put(image)\n        .then(snapshot => {\n          console.log(snapshot);\n          snapshot.ref.getDownloadURL().then((downloadURL) => {\n            console.log('File available at', downloadURL);\n            let obj = {}\n            obj[`image_${index}`] = downloadURL\n            this.firestore.collection('/works').doc(res.id).set(obj, { merge: true })\n            .then((resp)=>{\n              fulfill()\n            })\n            .catch(err =>{\n              reject(err)\n            })\n          })\n          .catch(err =>{\n            reject(err)\n          })\n        })\n        .catch(err =>{\n          reject(err)\n        })\n        });\n      })\n      .catch(err =>{\n        reject(err)\n      })\n    }) \n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'iteration'\n})\n\n  export class IterationPipe implements PipeTransform {\n    transform(value, args:string[]) : any {\n      let res = [];\n      for (let i = 0; i < value; i++) {\n          res.push(i);\n        }\n        return res;\n    }\n  }\n  \n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyByfKZNiGTz2PFwq5Sp2AMWsruJ_CW51rI\",\n    authDomain: \"sarfaraz-3eff1.firebaseapp.com\",\n    databaseURL: \"https://sarfaraz-3eff1.firebaseio.com\",\n    projectId: \"sarfaraz-3eff1\",\n    storageBucket: \"sarfaraz-3eff1.appspot.com\",\n    messagingSenderId: \"195104991448\"\n  }\n};\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}