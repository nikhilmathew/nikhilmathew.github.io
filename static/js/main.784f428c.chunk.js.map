{"version":3,"sources":["actions/types.js","Config/fire.js","actions/chatlistActions.js","Components/ChatList/newChatRoom.js","Config/fireMethods.js","Components/ChatList/invites.js","Components/ChatList/rooms.js","Components/ChatList/chatList.js","Components/ChatWindow/chatWindow.js","Components/ChatDetails/chatdetails.js","Components/Home/home.js","actions/authActions.js","Components/SignIn/signIn.js","Components/Register/SignUp.js","Components/AuthenticationPages/authPages.js","Components/App/App.js","serviceWorker.js","Reducers/authReducer.js","Reducers/chatListReducer.js","Reducers/index.js","store.js","index.js"],"names":["SIGNIN","SIGNOUT","SIGNINGIN","NEWUSER","REGISTERING","REGISTER","FETCHING_ROOMS","UPDATE_ROOMS","SELECT_CHAT_ROOM","FETCHING_INVITES","GET_INVITES","DELETE_INVITE","CLEAN_CHAT_REDUCER","DELETE_USER","UPDATE_MESSAGES","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","selectChatRoom","room","dispatch","type","payload","getInvites","firestore","collection","doc","auth","currentUser","email","onSnapshot","querySnapshot","data","console","log","irooms","rooms","full_invite_details","forEach","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","get","then","warn","push","stop","this","_x","apply","arguments","NewChatRoom","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","showInput","newRoomName","showRoomInput","bind","assertThisInitialized","hideRoomInput","createChatRoom","updateNewRoomName","setState","e","target","value","trim","name","add","roomName","owner","uid","ownerName","displayName","created_at","Date","res","chatroomid","id","user","update","chatrooms","FieldValue","arrayUnion","members","photoURL","catch","err","error","react_default","createElement","className","onClick","autocomplete","placeholder","onChange","src","Component","connect","Invites","acceptInvite","rejectInvite","deleteInvite","_this2","map","key","chatList","invitedRooms","arrayRemove","Rooms","selected","selectChatroom","fetchMessages","concat","chatRooms","room_id","mode","orderBy","limit","messages","message","sender","sender_id","toDate","ChatList","newChatRoom","ChatList_invites","Components_ChatList_rooms","ChatWindow","text","typing","send","selectedRoom","currentlySelectedRoom","messageCache","ChatDetails","emailInvite","emailChange","memberAdd","kickUser","deleteRoom","chatroom","set","merge","kickUserFromChat","roomobj","element","delete","JSON","stringify","toLocaleString","toConsumableArray","i","chatroom_id","user_id","result","rdata","filter","member","deleteUser","Home","logout","setTimeout","fetchRooms","cleanStateOnleaveHome","chatWindow","chatdetails","signOut","chat_rooms","promises","Promise","fulfill","reject","all","SignIn","password","onSubmit","newUser","preventDefault","defineProperty","login","signInWithEmailAndPassword","SignUp","registerUser","createUserWithEmailAndPassword","updateProfile","_fire$auth$currentUse","AuthPages","newuser","Register_SignUp","signIn","library","faBan","App","authListener","onAuthStateChanged","silentLogin","authPages","Home_home","Boolean","window","location","hostname","match","initialState","combineReducers","length","undefined","action","objectSpread","find","findIndex","el","arr","item","middleware","thunk","createLogger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","es","Components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.784f428c.chunk.js","sourcesContent":["export const SIGNIN ='SIGNIN';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNINGIN ='SIGNINGIN';\r\nexport const NEWUSER ='NEWUSER';\r\nexport const REGISTERING ='REGISTERING';\r\nexport const REGISTER = 'REGISTER';\r\n\r\n// export const CREATENEWROOM = ''\r\nexport const FETCHING_ROOMS =\"FETCHING_ROOMS\"\r\nexport const UPDATE_ROOMS =\"UPDATE_ROOMS\"\r\n\r\nexport const SELECT_CHAT_ROOM =\"SELECT_CHAT_ROOM\"\r\n\r\nexport const FETCHING_INVITES=\"FETCHING_INVITES\"\r\nexport const GET_INVITES =\"GET_INVITES\"\r\nexport const DELETE_INVITE=\"DELETE_INVITE\"\r\nexport const CLEAN_CHAT_REDUCER=\"CLEAN_CHAT_REDUCER\"\r\n\r\nexport const DELETE_USER = \"DELETE_USER\"\r\n\r\nexport const UPDATE_MESSAGES =\"UPDATE_MESSAGES\"","import firebase from 'firebase'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyCyFwexoUngNo92rHXrDZPhctCY6vmFkik\",\r\n    authDomain: \"reactchat-7902e.firebaseapp.com\",\r\n    databaseURL: \"https://reactchat-7902e.firebaseio.com\",\r\n    projectId: \"reactchat-7902e\",\r\n    storageBucket: \"reactchat-7902e.appspot.com\",\r\n    messagingSenderId: \"479296809558\"\r\n  };\r\n\r\nconst fire = firebase.initializeApp(config);\r\nexport default fire;","import { FETCHING_ROOMS,UPDATE_ROOMS, SELECT_CHAT_ROOM, FETCHING_INVITES, GET_INVITES, DELETE_INVITE,CLEAN_CHAT_REDUCER, DELETE_USER,UPDATE_MESSAGES } from './types'\r\nimport fire from '../Config/fire'\r\nimport { rejectInvite, deleteUser } from '../Config/fireMethods'\r\nvar message_listener =null\r\nexport function cleanStateOnleaveHome(){\r\n    return function(dispatch){\r\n        dispatch({\r\n            type:CLEAN_CHAT_REDUCER,\r\n            payload:null\r\n        })\r\n    }\r\n}\r\nexport function selectChatRoom(room){\r\n    return function(dispatch){\r\n        dispatch({\r\n            type:SELECT_CHAT_ROOM,\r\n            payload:room\r\n        })\r\n    }\r\n}\r\nexport function fetchMessages(room_id,mode){\r\n        console.log('fetch messages activated')\r\n        // if(mode){\r\n        //     if(typeof message_listener =='function')\r\n        //         message_listener()\r\n        // }\r\n        return function(dispatch){\r\n            dispatch({\r\n                type:UPDATE_MESSAGES,\r\n                payload:null\r\n            })\r\n            return fire.firestore().collection('chatrooms').doc(room_id).collection('messages').orderBy('created_at',\"desc\").limit(20)\r\n            .onSnapshot(function (querySnapshot){\r\n                let messages =[]\r\n                querySnapshot.forEach(function(doc) {\r\n                    let message ={\r\n                        message:doc.data().message,\r\n                        sender:doc.data().sender,\r\n                        sender_id:doc.data().sender_id,\r\n                        created_at:doc.data().created_at.toDate()\r\n                    }\r\n                    messages.push(message)\r\n                    // doc.data() is never undefined for query doc snapshots\r\n                    console.log(doc.id, \" => \", doc.data());\r\n                });\r\n                console.log(\"messages\",querySnapshot)\r\n                dispatch({\r\n                    type:UPDATE_MESSAGES,\r\n                    payload:messages\r\n                })\r\n            },\r\n            err=>{\r\n                console.warn(err)\r\n            })\r\n        }\r\n        \r\n}\r\nexport function fetchRooms(){\r\n    return function(dispatch){\r\n        console.log(\"fetch rooms method called\")\r\n        dispatch(\r\n            {\r\n                type: FETCHING_ROOMS,\r\n                payload: null\r\n            }\r\n          );\r\n        return fire.firestore().collection(\"users\").doc(fire.auth().currentUser.uid)\r\n        .onSnapshot(function(querySnapshot) {\r\n            console.log(\"fetching rooms\", querySnapshot.data().chatrooms)\r\n            var rooms = querySnapshot.data().chatrooms? querySnapshot.data().chatrooms:null\r\n            console.log(rooms)\r\n            if(rooms){\r\n                let chat_rooms = []\r\n                let promises = []\r\n                rooms.forEach((doc) =>{\r\n                    console.log(doc)\r\n                    promises.push(\r\n                    new Promise((fulfill,reject)=>{\r\n                            fire.firestore().collection(\"chatrooms\").doc(doc).get()\r\n                            .then(room=>{\r\n                                console.warn(\"inside loop\",room.data())\r\n                                // chat_rooms.push(room.data())\r\n                                fulfill(room.data())\r\n                            })\r\n                    })\r\n                    )\r\n                });\r\n                Promise.all(promises)\r\n                .then((result)=>{\r\n                    console.log(result)\r\n                    dispatch({\r\n                        type:UPDATE_ROOMS,\r\n                        payload:result\r\n                    })\r\n                    // result.forEach(element => {\r\n                        \r\n                    // });\r\n                })\r\n                console.log(\"outside loop\")\r\n                dispatch({\r\n                    type:UPDATE_ROOMS,\r\n                    payload:chat_rooms\r\n                })\r\n                console.warn(chat_rooms)\r\n            }else{\r\n                dispatch({\r\n                    type:UPDATE_ROOMS,\r\n                    payload:null\r\n                })\r\n            }\r\n            \r\n            // console.log(\"Current cities in CA: \", cities.join(\", \"));\r\n        });\r\n    }\r\n}\r\nexport function getInvites(){\r\n    return function (dispatch){\r\n        dispatch(\r\n            {\r\n                type: FETCHING_INVITES,\r\n                payload: null\r\n            }\r\n          );\r\n          return fire.firestore().collection(\"invites\").doc(fire.auth().currentUser.email)\r\n          .onSnapshot(function(querySnapshot) {\r\n            if(querySnapshot.data()!=null){\r\n                console.log(\"fetching invites\", querySnapshot.data(), querySnapshot.data()==null)\r\n                var irooms = querySnapshot.data().rooms? querySnapshot.data().rooms:null\r\n                console.log(irooms)\r\n                if(irooms){\r\n                    let full_invite_details = []\r\n                    irooms.forEach(async (doc) =>{\r\n                        console.log(doc)\r\n                        await fire.firestore().collection(\"chatrooms\").doc(doc).get()\r\n                        .then(room=>{\r\n                            console.warn(room.data())\r\n                            full_invite_details.push(room.data())\r\n                            dispatch({\r\n                                type:GET_INVITES,\r\n                                payload:room.data()\r\n                            })\r\n                        })\r\n                    });\r\n                    console.warn(full_invite_details)\r\n                }else{\r\n                    dispatch({\r\n                        type:GET_INVITES,\r\n                        payload:null\r\n                    })\r\n                }\r\n            }else{\r\n                dispatch({\r\n                    type:GET_INVITES,\r\n                    payload:null\r\n                })\r\n            }\r\n              \r\n              // console.log(\"Current cities in CA: \", cities.join(\", \"));\r\n          });   \r\n    }\r\n}\r\nexport function deleteInvite(id){\r\n    return function(dispatch){\r\n        rejectInvite(id)\r\n        dispatch({\r\n            type:DELETE_INVITE,\r\n            payload:id\r\n        })\r\n    }\r\n}\r\nexport function kickUserFromChat(chatroom_id,user_id){\r\n    return function(dispatch){\r\n        deleteUser(chatroom_id,user_id)\r\n        dispatch({\r\n            type:DELETE_USER,\r\n            payload:null\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n// import PropTypes from 'prop-types'\r\nimport  './newchatroom.scss'\r\nimport { createChatRoom } from '../../Config/fireMethods'\r\nclass NewChatRoom extends Component {\r\n    state={\r\n        showInput:false,\r\n        newRoomName:''\r\n    }\r\n  constructor(props){\r\n    super(props)\r\n    console.log(this.props)\r\n    this.showRoomInput = this.showRoomInput.bind(this)\r\n    this.hideRoomInput = this.hideRoomInput.bind(this)\r\n    this.createChatRoom = this.createChatRoom.bind(this)\r\n    this.updateNewRoomName = this.updateNewRoomName.bind(this)\r\n  }\r\n  showRoomInput(){\r\n    console.log(\"new room creation started \")\r\n    this.setState({\r\n        showInput:true\r\n    })\r\n  }\r\n  hideRoomInput(){\r\n    console.log(\"new room creation cancelled \")\r\n    this.setState({\r\n        showInput:false,\r\n        newRoomName:''\r\n    })\r\n  }\r\n  updateNewRoomName(e){\r\n    this.setState({\r\n        newRoomName:e.target.value\r\n    })\r\n  }\r\n  createChatRoom(){\r\n      // call action here\r\n      let name = this.state.newRoomName.trim()\r\n      if(name!=='')\r\n        createChatRoom(this.state.newRoomName)\r\n      this.setState({\r\n        showInput:false,\r\n        newRoomName:''\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n    <div className=\"row \" >\r\n      <div className=\"col-12\">\r\n        <div className=\"row create_room_button_container\">\r\n              <button className=\"show_room_input\" onClick={this.showRoomInput}>Create a New Room</button>\r\n        </div>\r\n        { this.state.showInput?\r\n        <div className=\"row create_room_input_container\">\r\n          <div className=\"col-8\">\r\n            <input type = \"text\" className=\"room_name\" autocomplete=\"off\" placeholder=\"enter a name for the chat room\" name=\"chat_room\" value={this.state.newRoomName} onChange={this.updateNewRoomName} />\r\n          </div>\r\n          <div className=\"col-1 cancel_button_container\">\r\n            <img className=\"cancel_creation\" onClick={this.hideRoomInput} src=\"https://firebasestorage.googleapis.com/v0/b/reactchat-7902e.appspot.com/o/iconfinder_ban_1608568.png?alt=media&token=a81b998a-6142-486b-8a9e-687511b28504\"/>\r\n          </div>\r\n          <div className=\"col-1 offset-1 create_button_container\">\r\n            <img className=\"creat_room\" onClick={this.createChatRoom} src=\"https://firebasestorage.googleapis.com/v0/b/reactchat-7902e.appspot.com/o/iconfinder_Dialog-Apply-64_55520.png?alt=media&token=07174ff3-a4ff-40bf-9c30-913e05e7d910\"/>\r\n          </div>\r\n        </div>\r\n        :null}\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n  \r\n}\r\nNewChatRoom.propTypes ={\r\n}\r\nfunction mapStateToProps (state){\r\n  return {\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {  })(NewChatRoom)","import fire from './fire'\r\nimport * as firebase from 'firebase';\r\nimport { getInvites } from '../actions/chatlistActions';\r\n\r\nexport function addUserToFireDBOnRegistration(){\r\n    console.log(\"sending data to firestore\")\r\n    return new Promise((fulfill,reject)=>{\r\n        let { displayName, photoURL, email,uid }= fire.auth().currentUser\r\n        fire.firestore().collection('users').doc(email).set({\r\n            name:displayName,\r\n            email:email,\r\n            photoURL:photoURL,\r\n            uid:uid,\r\n            created_at: Date.now()\r\n        })\r\n        .then(result=>{\r\n            console.log(\" new user added to DB\",result)\r\n            fulfill()\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"error adding new user to firestore\",err)\r\n            reject()\r\n        })\r\n    })\r\n}\r\nexport function createChatRoom(name){\r\n    fire.firestore().collection('chatrooms').add({\r\n        roomName:name,\r\n        owner: fire.auth().currentUser.uid,\r\n        ownerName: fire.auth().currentUser.displayName,\r\n        created_at:new Date()\r\n    })\r\n    .then(res=>{\r\n        console.log(res)\r\n        let chatroomid = res.id\r\n        let user  = fire.auth().currentUser\r\n        fire.firestore().collection('users').doc(user.uid).update({\r\n            chatrooms: firebase.firestore.FieldValue.arrayUnion(chatroomid)\r\n        })\r\n        fire.firestore().collection('chatrooms').doc(chatroomid).update({\r\n            id:chatroomid\r\n        })\r\n        fire.firestore().collection('chatrooms').doc(chatroomid).update({\r\n            members: firebase.firestore.FieldValue.arrayUnion({name:user.displayName,id:user.uid,photoURL:user.photoURL})\r\n        })\r\n    })\r\n    .catch(err=>{\r\n        console.error(err)\r\n    })\r\n}\r\nexport function sendInvite(email,chatroom){\r\n    fire.firestore().collection('invites').doc(email).set({\r\n        rooms: firebase.firestore.FieldValue.arrayUnion(chatroom)\r\n    },\r\n    {\r\n        merge:true\r\n    })\r\n}\r\nexport function rejectInvite(id){\r\n    fire.firestore().collection('invites').doc(fire.auth().currentUser.email).update({\r\n        rooms:firebase.firestore.FieldValue.arrayRemove(id)\r\n    })\r\n    .then(()=>{\r\n        getInvites()\r\n    })\r\n}\r\nexport function acceptInvite(chatroomid){\r\n        let user  = fire.auth().currentUser\r\n        fire.firestore().collection('users').doc(user.uid).update({\r\n            chatrooms: firebase.firestore.FieldValue.arrayUnion(chatroomid)\r\n        })\r\n        fire.firestore().collection('chatrooms').doc(chatroomid).update({\r\n            members: firebase.firestore.FieldValue.arrayUnion({name:user.displayName,id:user.uid,photoURL:user.photoURL})\r\n        })\r\n}\r\nexport function deleteUser(room_id,user_id){\r\n    console.log(\"user deletion reeived\",room_id,user_id)\r\n    fire.firestore().collection('chatrooms').doc(room_id).get()\r\n    .then(result=>{\r\n        let rdata =result.data()\r\n        console.log(rdata.members)\r\n        fire.firestore().collection('chatrooms').doc(room_id).update({\r\n            members: rdata.members.filter(member => member.id !== user_id)\r\n        })\r\n        fire.firestore().collection('users').doc(user_id).update({\r\n            chatrooms: firebase.firestore.FieldValue.arrayRemove(room_id)\r\n        })\r\n    })\r\n    \r\n}\r\nexport function sendMessage(room_id,message){\r\n    fire.firestore().collection('chatrooms').doc(room_id).collection('messages').add({\r\n        sender:fire.auth().currentUser.displayName,\r\n        sender_id:fire.auth().currentUser.uid,\r\n        message:message,\r\n        created_at: new Date()\r\n    })\r\n}\r\nexport function deleteRoom(roomobj){\r\n    console.log(roomobj)\r\n    roomobj.members.forEach(element => {\r\n        fire.firestore().collection('users').doc(element.id).update({\r\n            chatrooms:firebase.firestore.FieldValue.arrayRemove(roomobj.id)\r\n        })\r\n    });\r\n    fire.firestore().collection('chatrooms').doc(roomobj.id).delete()\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { selectChatRoom, deleteInvite } from '../../actions/chatlistActions'\r\nimport { acceptInvite } from '../../Config/fireMethods'\r\nimport  './invites.scss'\r\nclass Invites extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.acceptInvite = this.acceptInvite.bind(this)\r\n        this.rejectInvite = this.rejectInvite.bind(this)\r\n    }\r\n    acceptInvite(e){\r\n        console.log(e.target.id)\r\n        acceptInvite(e.target.id)\r\n        this.props.deleteInvite(e.target.id)\r\n    }\r\n    rejectInvite(e){\r\n        console.log(e.target.id)\r\n        this.props.deleteInvite(e.target.id)\r\n    }\r\n    componentDidUpdate(){\r\n        console.log(this.props.rooms)\r\n    }\r\n  render() {\r\n    return (\r\n        <div className=\"row invites_box\">\r\n        <p>Pending Invites</p>\r\n            <div className=\"col-12\">\r\n                <div className=\"row joined_rooms_container\">\r\n                    <div className=\"col-12\">\r\n                        {this.props.irooms!=null?this.props.irooms.map(room =>(\r\n                             <div className=\"row invite_room\" key={room.created_at}>\r\n                                <div className=\"col-9\">\r\n                                    You have an invite to room '{room.roomName}' from '{room.ownerName}'\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    <div className=\"row\">\r\n                                        <button className=\"accept_invite\" id={room.id}  onClick={this.acceptInvite}>Accept</button>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <button className=\"reject_invite\" id={room.id}  onClick={this.rejectInvite}>Reject</button>\r\n                                    </div>\r\n                                </div>                                \r\n                            </div>\r\n                        )\r\n                        ):null\r\n                        }\r\n                    </div>\r\n                \r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n  }\r\n  \r\n}\r\nInvites.propTypes ={\r\n    deleteInvite:PropTypes.func.isRequired\r\n}\r\nfunction mapStateToProps (state){\r\n  return {\r\n      irooms:state.chatList.invitedRooms\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { selectChatRoom,deleteInvite  })(Invites)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { selectChatRoom,fetchMessages } from '../../actions/chatlistActions'\r\nimport  './rooms.scss'\r\nclass Rooms extends Component {\r\n    state={\r\n        selected:null\r\n    }\r\n    constructor(props){\r\n        super(props)\r\n        this.selectChatroom = this.selectChatroom.bind(this)\r\n    }\r\n    selectChatroom(e){\r\n        console.log(e.target.id)\r\n        this.props.fetchMessages(e.target.id,true)\r\n        this.props.selectChatRoom(e.target.id)\r\n        this.setState({\r\n            selected:e.target.id\r\n        })\r\n    }\r\n    componentDidUpdate(){\r\n        console.log(this.props.rooms)\r\n    }\r\n  render() {\r\n    return (\r\n        <div className=\"row room_list_joined\">\r\n        <p>Joined Chat Rooms</p>\r\n            <div className=\"col-12\">\r\n                <div className=\"row joined_rooms_container\">\r\n                    <div className=\"col-12\">\r\n                        {this.props.rooms!=null?this.props.rooms.map(room =>(\r\n                             <div className={`row room  ${this.state.selected===room.id?\"selected_room\":''}`} key={room.created_at}>\r\n                                <div className=\"col-9\">\r\n                                    {room.roomName}\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    <button className='select_room '  id={room.id} onClick={this.selectChatroom}>{this.state.selected===room.id?\"Active->\":'Enter'}</button>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                        ):null\r\n                        }\r\n                    </div>\r\n                \r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n  }\r\n  \r\n}\r\nRooms.propTypes ={\r\n    selectChatRoom :PropTypes.func.isRequired,\r\n    fetchMessages:PropTypes.func.isRequired\r\n}\r\nfunction mapStateToProps (state){\r\n  return {\r\n      rooms:state.chatList.chatRooms\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { selectChatRoom ,fetchMessages })(Rooms)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n// import PropTypes from 'prop-types'\r\nimport  './chatlist.scss'\r\nimport NewChatRoom from './newChatRoom';\r\nimport Invites from './invites'\r\nimport Rooms from './rooms';\r\nclass ChatList extends Component {\r\n  render() {\r\n    return (\r\n       <div className=\"row chat_list_container\" >\r\n         <div className=\"col-12\">\r\n                <NewChatRoom />\r\n                <Invites/>\r\n                <Rooms/>\r\n         </div>\r\n       </div>\r\n    );\r\n  }\r\n  \r\n}\r\nChatList.propTypes ={\r\n}\r\nfunction mapStateToProps (state){\r\n  return {\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {  })(ChatList)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { sendMessage } from '../../Config/fireMethods'\r\n// import PropTypes from 'prop-types'\r\nclass ChatWindow extends Component {\r\n    state={\r\n        text:''\r\n    }\r\n    constructor(props){\r\n        super(props)\r\n\r\n    this.typing = this.typing.bind(this)\r\n    this.send = this.send.bind(this)\r\n    }\r\n    typing(e){\r\n        this.setState({\r\n            text:e.target.value\r\n        })\r\n    }\r\n    send(){\r\n        console.log(\"sending message\")\r\n        sendMessage(this.props.selectedRoom.id,this.state.text)\r\n        this.setState({\r\n            text:''\r\n        })\r\n    }\r\n  render() {\r\n    return (\r\n       <div className=\"row chat_list_container\" >\r\n         <div className=\"col-12\">\r\n                <div className=\"row\">\r\n                    ROOM TITLE {this.props.selectedRoom!=null? this.props.selectedRoom.roomName:''}\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"message_container\">\r\n                    {this.props.messages!=null?this.props.messages.map(message =>(\r\n                                <div className=\"message \" key={message.created_at}>\r\n                                   {message.sender_id===this.props.user.uid?'': <span >{message.sender}: </span>}{message.message}\r\n                                </div>\r\n                            )\r\n                            ):null\r\n                    }\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"input_box\">\r\n                    <input type=\"text\" name=\"chat_text\" onChange={this.typing} value={this.state.text} />\r\n                    <button className=\"send_message\" onClick={this.send} >SEND</button>\r\n                </div>\r\n         </div>\r\n       </div>\r\n    );\r\n  }\r\n  \r\n}\r\nChatWindow.propTypes ={\r\n}\r\nfunction mapStateToProps (state){\r\n  return {\r\n      selectedRoom :state.chatList.currentlySelectedRoom,\r\n      user:state.auth.user,\r\n      messages:state.chatList.messageCache\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {  })(ChatWindow)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { sendInvite, deleteRoom } from '../../Config/fireMethods'\r\nimport { kickUserFromChat } from '../../actions/chatlistActions'\r\nimport PropTypes from 'prop-types'\r\nclass ChatDetails extends Component {\r\n    state={\r\n        emailInvite:''\r\n    }\r\n  constructor(props){\r\n      super(props)\r\n      this.emailChange = this.emailChange.bind(this)\r\n      this.memberAdd = this.memberAdd.bind(this)\r\n      this.kickUser = this.kickUser.bind(this)\r\n      this.deleteRoom = this.deleteRoom.bind(this)\r\n  }\r\n  emailChange(e){\r\n      this.setState({\r\n          emailInvite:e.target.value\r\n      })\r\n  }\r\n  memberAdd(){\r\n      console.log(\"send email invite data to firestore\")\r\n      sendInvite(this.state.emailInvite,this.props.selectedRoom.id)\r\n  }  \r\n  kickUser(e){\r\n    this.props.kickUserFromChat(this.props.selectedRoom.id,e.target.id)\r\n  }\r\n  deleteRoom(){\r\n    console.log(\"delete room\")\r\n    deleteRoom(this.props.selectedRoom)\r\n  }\r\n  render() {\r\n    return (\r\n       <div className=\"row chat_list_container\" >\r\n        {this.props.selectedRoom!=null?\r\n         <div className=\"col-12\">\r\n                <div className=\"row\">\r\n                    Chat room title is  { this.props.selectedRoom.roomName}\r\n                </div>\r\n                <div className=\"row\">\r\n                    Owner is {  this.props.selectedRoom.ownerName }\r\n                </div>\r\n                <div className=\"row\">\r\n                    Created at {  JSON.stringify(new Date(this.props.selectedRoom.created_at.toDate()).toLocaleString()) }\r\n                </div>\r\n                {this.props.selectedRoom.owner===this.props.user.uid?\r\n                <div className=\"row\">\r\n                    <p> Add a user to chatroom - </p>\r\n                    <div className=\"newuser_email\" >\r\n                        <input type=\"email\" name=\"email\" onChange={this.emailChange} value={this.state.emailInvite}/>\r\n                        <button onClick={this.memberAdd}>Send Invite </button> \r\n                    </div>\r\n                </div>\r\n                :''}\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 members_containers\">\r\n                        {\r\n                            [...this.props.selectedRoom.members].map((element, i) =>\r\n                                <div className=\"row\" key={element.id}>\r\n                                    <div className=\"col-8\">\r\n                                        { element.name}\r\n                                    </div>\r\n                                    <div className=\"col-4\">\r\n                                        {element.id===this.props.selectedRoom.owner? 'OWNER':this.props.user.uid===this.props.selectedRoom.owner? <button id={element.id} className=\"remove_member\" onClick={this.kickUser} >Kick Out</button>:''}\r\n                                    </div>\r\n                                </div>\r\n                        )}\r\n\r\n                    </div>\r\n                </div>\r\n                {this.props.selectedRoom.owner===this.props.user.uid?\r\n                    <div className=\"row\">\r\n                            <div className=\"col-12 delete_room\">\r\n                                <button className=\"delete_chat_button\" onClick={this.deleteRoom}>Delete this Room</button>\r\n                            </div>\r\n                    </div>\r\n                :''}\r\n         </div>\r\n         :''}\r\n       </div>\r\n    );\r\n  }\r\n  \r\n}\r\nChatDetails.propTypes ={\r\n    kickUserFromChat:PropTypes.func.isRequired\r\n}\r\nfunction mapStateToProps (state){\r\n  return {\r\n      selectedRoom :state.chatList.currentlySelectedRoom,\r\n      rooms:state.chatList.chatRooms,\r\n      user: state.auth.user\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { kickUserFromChat })(ChatDetails)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { logout } from '../../actions/authActions'\r\nimport { fetchRooms,getInvites,cleanStateOnleaveHome } from '../../actions/chatlistActions'\r\nimport ChatList from '../ChatList/chatList'\r\nimport  './home.scss'\r\nimport ChatWindow from '../ChatWindow/chatWindow'\r\nimport ChatDetails from '../ChatDetails/chatdetails'\r\n\r\nclass Home extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    console.log(this.props)\r\n    this.logout = this.logout.bind(this)\r\n  }\r\n  componentDidMount(){\r\n    console.log(\"home mounted\")\r\n    setTimeout(()=>{\r\n      if(this.props.user!==null){\r\n        this.props.fetchRooms()\r\n      this.props.getInvites()\r\n      }\r\n      \r\n    },2000)\r\n    \r\n  }\r\n  componentDidUpdate(){\r\n    console.log(\"home updated\")\r\n    if(this.props.user!==null){\r\n      this.props.fetchRooms()\r\n      this.props.getInvites()\r\n    }\r\n  }\r\n  componentWillUnmount(){\r\n    this.props.cleanStateOnleaveHome()\r\n    console.log('***************************************************************************')\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n       <div className=\"row\" >\r\n          <div className=\"title_bar_container\">\r\n            <div className=\"title\">\r\n              <p>Welcome to Nik CHat ,  {this.props.user.displayName}  </p>\r\n            </div>\r\n            <button className=\"logout_button btn\" onClick={this.logout} >Logout </button>\r\n          </div>\r\n       </div>\r\n       <div className=\"row components\">\r\n          <div className=\"col-4\">\r\n            <ChatList />\r\n          </div>\r\n          <div className=\"col-5\">\r\n            <ChatWindow />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <ChatDetails/>\r\n          </div>\r\n       </div>\r\n      \r\n      </div>\r\n    );\r\n  }\r\n  logout(){\r\n    console.log(\"logout\")\r\n    this.props.logout()\r\n  }\r\n}\r\nHome.propTypes ={\r\n  logout: PropTypes.func.isRequired,\r\n  fetchRooms: PropTypes.func.isRequired,\r\n  getInvites: PropTypes.func.isRequired,\r\n  cleanStateOnleaveHome:PropTypes.func.isRequired\r\n\r\n}\r\nfunction mapStateToProps (state){\r\n  return {\r\n    user: state.auth.user\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { logout,fetchRooms, getInvites,cleanStateOnleaveHome })(Home)","import { SIGNIN, SIGNOUT, SIGNINGIN, NEWUSER, REGISTERING, REGISTER } from './types'\r\nimport fire from '../Config/fire'\r\n// import { addUserToFireDBOnRegistration } from '../Config/fireMethods'\r\n\r\nexport function silentLogin(user){\r\n    return function(dispatch){\r\n        dispatch({\r\n            type:SIGNIN,\r\n            payload:user\r\n        })\r\n    }\r\n}\r\nexport function login(email,password){\r\n    return function(dispatch){\r\n        console.log(\"sign in method called\")\r\n        dispatch(\r\n            {\r\n                type: SIGNINGIN,\r\n                payload: null\r\n            }\r\n          );\r\n        return fire.auth().signInWithEmailAndPassword(email,password)\r\n        .then((result) => {\r\n            console.log(result)\r\n          let { user } = result;\r\n          dispatch(\r\n            {\r\n                type: SIGNIN,\r\n                payload: user\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          dispatch({\r\n            type: SIGNOUT,\r\n            payload: null\r\n        })\r\n        });\r\n    }\r\n}\r\nexport function logout(){\r\n    console.log(\"logout called\")\r\n    return function(dispatch){\r\n        return fire.auth().signOut()\r\n        .then(res=>{\r\n            console.log(\"logout\",res)\r\n            dispatch(\r\n                {\r\n                    type:SIGNOUT,\r\n                    payload:null\r\n                }\r\n            )\r\n        })\r\n    }\r\n        \r\n    \r\n}\r\nexport function newUser(){\r\n    console.log(\"new user , show registration page\")\r\n    return function(dispatch){\r\n        dispatch({\r\n            type:NEWUSER,\r\n            payload:null\r\n        })\r\n    }\r\n}\r\nexport function registerUser(email,password,displayName){\r\n    return function(dispatch){\r\n        dispatch(\r\n            {\r\n                type: REGISTERING,\r\n                payload: null\r\n            }\r\n          );\r\n\r\n        return fire.auth().createUserWithEmailAndPassword(email, password)\r\n                .then(result=>{\r\n                    console.log(result)\r\n                    result.user.updateProfile({\r\n                        displayName: displayName,\r\n                        photoURL: \"https://cdn4.iconfinder.com/data/icons/evil-icons-user-interface/64/avatar-512.png\"\r\n                      }).then(function() {\r\n                        // Update successful.\r\n                        console.log(\"user name and pic updated\",result,result.user)\r\n                        let { displayName, photoURL, email,uid }= fire.auth().currentUser\r\n                        fire.firestore().collection('users').doc(uid).set({\r\n                            name:displayName,\r\n                            email:email,\r\n                            photoURL:photoURL,\r\n                            uid:uid,\r\n                            created_at: new Date()\r\n                        })\r\n                        .then(result=>{\r\n                            console.log(\" new user added to DB\",result)\r\n                        })\r\n                        .catch(err=>{\r\n                            console.log(\"error adding new user to firestore\",err)\r\n                        })\r\n                            dispatch({\r\n                                type:REGISTER,\r\n                                payload:result.user\r\n                            })\r\n                      }).catch(function(error) {\r\n                        // An error happened.\r\n                      });\r\n                    \r\n                })\r\n                .catch(function(error) {\r\n                    // Handle Errors here.\r\n                    console.log(\"registration errors \",error)\r\n                    // ...\r\n                });\r\n    }\r\n\r\n}\r\n //   firebase.database().ref(`users/${ uid }`).set({\r\n        //     displayName,\r\n        //     photoURL,\r\n        //     email,\r\n        //     lastTimeLoggedIn: firebase.database.ServerValue.TIMESTAMP\r\n        //   });\r\n","import React , { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport { login, newUser } from '../../actions/authActions'\r\nimport './signin.scss'\r\nclass SignIn extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            email:'',\r\n            password:''\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.newUser = this.newUser.bind(this)\r\n    }\r\n    onChange(e){\r\n        e.preventDefault()\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    onSubmit(e){\r\n        e.preventDefault()\r\n        console.log(\"clicked sign in \")\r\n        this.props.login(this.state.email,this.state.password)\r\n\r\n    }\r\n    newUser(){\r\n        this.props.newUser()\r\n    }\r\n    componentWillMount(){\r\n        // this.props.login()\r\n    }\r\n    render(){\r\n        return(\r\n            <div >\r\n                <p>Sign in  </p>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div>\r\n                        <label>Email </label>\r\n                        <input \r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            onChange={this.onChange}\r\n                            value={this.state.email}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label>Password </label>\r\n                        <input \r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            onChange={this.onChange}\r\n                            value={this.state.password}\r\n                        />\r\n                    </div>\r\n                    <br/>\r\n                    <button type=\"submit\" >Login</button>\r\n                </form>\r\n                <p>New User? <button onClick={this.newUser}>Sign Up</button></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// const mapStateToProps = state => ({\r\n//     login:state.auth.user\r\n// })\r\n\r\nSignIn.propTypes ={\r\n    login: PropTypes.func.isRequired,\r\n    newUser: PropTypes.func.isRequired\r\n}\r\nexport default connect(null, { login,newUser })(SignIn)","import React , { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport { registerUser } from '../../actions/authActions'\r\nclass SignUp extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            email:'',\r\n            password:'',\r\n            name:''\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n    onChange(e){\r\n        e.preventDefault()\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    onSubmit(e){\r\n        e.preventDefault()\r\n        console.log(\"clicked sign in \")\r\n        this.props.registerUser(this.state.email,this.state.password,this.state.name)\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div >\r\n                <p>Sign Up  </p>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div>\r\n                        <label>Name </label>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            onChange={this.onChange}\r\n                            value={this.state.name}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label>Email </label>\r\n                        <input \r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            onChange={this.onChange}\r\n                            value={this.state.email}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label>Password </label>\r\n                        <input \r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            onChange={this.onChange}\r\n                            value={this.state.password}\r\n                        />\r\n                    </div>\r\n                    <br/>\r\n                    <button type=\"submit\" >Login</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nSignUp.propTypes ={\r\n    registerUser: PropTypes.func.isRequired,\r\n}\r\nexport default connect(null, { registerUser })(SignUp)","import React , { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SignIn from '../SignIn/signIn';\r\nimport SignUp from '../Register/SignUp'\r\nclass AuthPages extends Component {\r\n    \r\n    render(){\r\n        return(\r\n            <div >\r\n                { this.props.newuser?<SignUp/>:<SignIn/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// const mapStateToProps = state => ({\r\n//     login:state.auth.user\r\n// })\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        newuser:state.auth.newUser\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { })(AuthPages)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { silentLogin } from '../../actions/authActions'\r\n// import logo from './logo.svg';\r\nimport fire from '../../Config/fire'\r\nimport './App.css';\r\nimport Home from '../Home/home'\r\nimport AuthPages from '../AuthenticationPages/authPages';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBan, } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faBan)\r\nclass App extends Component {\r\n  // constructor(props){\r\n  //   super(props)\r\n   \r\n  // }\r\n\r\n  componentWillMount(){\r\n    console.log(\"app mounted\")\r\n    this.authListener()\r\n  }\r\n  authListener(){\r\n    // console.log(fire)\r\n    fire.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        // User is signed in.\r\n        this.props.silentLogin(user)\r\n        console.log(\"auto signin user is signed in \",user)\r\n      } else {\r\n        // No user is signed in.\r\n        this.props.silentLogin(null)\r\n        console.log(\"no user signed in\")\r\n      }\r\n    });  \r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {  this.props.user==null?<AuthPages/>:<Home/>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes ={\r\n  silentLogin: PropTypes.func.isRequired\r\n}\r\nfunction mapStateToProps (state){\r\n  return {\r\n    user: state.auth.user\r\n  }\r\n}\r\nexport default  connect(mapStateToProps, { silentLogin })(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { SIGNIN,SIGNOUT, SIGNINGIN, NEWUSER, REGISTER,REGISTERING } from '../actions/types'\r\n\r\nconst initialState = {\r\n    user: null,\r\n    newUser:false\r\n}\r\nexport default function(state = initialState,action) {\r\n    switch (action.type){\r\n        case SIGNIN:\r\n            return {\r\n                ...state,\r\n                user:action.payload,\r\n                newUser:false\r\n            }\r\n        case SIGNOUT:\r\n            return {\r\n                newUser:false,\r\n                user:null\r\n            }\r\n        case SIGNINGIN:\r\n            return{\r\n                ...state,\r\n                user:null,\r\n\r\n            }  \r\n        case NEWUSER:\r\n            return {\r\n                ...state,\r\n                newUser:true\r\n            }\r\n        case REGISTER:\r\n            return {\r\n                ...state,\r\n                user:action.payload\r\n            }\r\n        case REGISTERING:\r\n            return {\r\n                ...state,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n// const initialState = {\r\n//   isUserSignedIn: false,\r\n//   isInProgress: false,\r\n//   hasError: false,\r\n//   errorMessage: '',\r\n//   uid: 0\r\n// };\r\n\r\n// export function auth(state = initialState, action) {\r\n//   switch(action.type) {\r\n//     case types.SIGNIN_SUCCESS:\r\n//       const { uid } = action;\r\n//       return {\r\n//         ...state,\r\n//         isUserSignedIn: true,\r\n//         isInProgress: false,\r\n//         uid\r\n//       };\r\n//     case types.SIGNIN:\r\n//       return {\r\n//         ...state,\r\n//         isInProgress: true\r\n//       };\r\n//     case types.SIGNIN_ERROR:\r\n//       const { errorMessage } = action;\r\n//       return {\r\n//         ...state,\r\n//         hasError: true,\r\n//         errorMessage\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// }\r\n","import { UPDATE_ROOMS, FETCHING_ROOMS,SELECT_CHAT_ROOM, GET_INVITES,FETCHING_INVITES, DELETE_INVITE,CLEAN_CHAT_REDUCER, UPDATE_MESSAGES } from '../actions/types'\r\nimport { fetchMessages } from '../actions/chatlistActions'\r\nconst initialState = {\r\n    \r\n    chatRooms : [],\r\n    currentlySelectedRoom:null,\r\n    invitedRooms:[],\r\n    messageCache:null\r\n}\r\nexport default function(state = initialState,action) {\r\n    switch (action.type){\r\n        case CLEAN_CHAT_REDUCER:\r\n            return {\r\n                ...state,\r\n                chatRooms:[],\r\n                currentlySelectedRoom:null,\r\n                invitedRooms:[],\r\n                messageCache:[]\r\n            }\r\n        case FETCHING_ROOMS:\r\n            return {\r\n                ...state,\r\n            }\r\n        case UPDATE_ROOMS:\r\n            if(action.payload === null)\r\n                return state\r\n            else\r\n                return  {\r\n                    ...state,\r\n                    chatRooms:action.payload//[...state.chatRooms, action.payload]\r\n                } \r\n        case SELECT_CHAT_ROOM:\r\n                if(state.currentlySelectedRoom!==null){\r\n                    // fetchMessages(action.payload,false)\r\n                    return {\r\n                        ...state,\r\n                        currentlySelectedRoom:state.chatRooms.find(room => room.id ===action.payload),\r\n                        messageCache:null\r\n                    }\r\n                }else{\r\n                    // fetchMessages(action.payload,true)\r\n                    return {\r\n                        ...state,\r\n                        currentlySelectedRoom:state.chatRooms.find(room => room.id ===action.payload),\r\n                        messageCache:null\r\n                    }\r\n                }\r\n        case UPDATE_MESSAGES:\r\n                return{\r\n                    ...state,\r\n                    messageCache:action.payload\r\n                }\r\n        case FETCHING_INVITES:\r\n                return state\r\n        case GET_INVITES:\r\n                if(action.payload === null)\r\n                    return state\r\n                let index1 = state.invitedRooms.findIndex(el => el.id === action.payload.id);\r\n                if(index1 === -1)\r\n                    return  {\r\n                        ...state,\r\n                        invitedRooms:[...state.invitedRooms, action.payload]\r\n                    } \r\n            return state;\r\n        case DELETE_INVITE:\r\n            let arr = state.invitedRooms.filter(item => item.id !== action.payload)\r\n               return {\r\n                   ...state,\r\n                   invitedRooms:arr\r\n               }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport  authReducer  from './authReducer';\r\nimport chatListReducer from './chatListReducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    chatList:chatListReducer\r\n})","import  { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from './Reducers'\r\nconst initialState ={};\r\n\r\nconst middleware =[thunk,createLogger()];\r\n\r\nconst store = createStore(rootReducer,initialState,applyMiddleware(...middleware))\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n<Provider store = { store }>\r\n    <App />\r\n</Provider>\r\n, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}